// backend/src/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SolarPanel {
  id                Int                      @id @default(autoincrement())
  description       String
  typeId            Int
  components        ComponentsBySolarPanel[]
  price             Decimal
  Cart              Cart[]
  Order             Order?                   @relation(fields: [orderId], references: [id])
  orderId           Int?
  OrderDetails      OrderDetails[]
  imageUrl          String

  productPriceId    String?
  SolarPanelView    SolarPanelView[]
  SolarPanelReview  SolarPanelReviews[]
  SolarPanelRatings SolarPanelRatings[]
  Sales             Sales[]
  // Audit fields //
  isActive          Boolean                  @default(true)
  createdAt         DateTime                 @default(now())
  createdBy         String?
  updatedAt         DateTime                 @default(now()) @updatedAt
  updatedBy         String?
  isDeleted         Boolean                  @default(false)
}

//
model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  quantity    Int
  SKU         String    @unique
  imageUrl    String
  categoryId  Int
  category    Category? @relation(fields: [categoryId], references: [id])

  ProductPrice   ProductPrice[]
  ProductPriceId String?
  ProductReview  ProductReview[]
  ProductRating  ProductRating[]
  ProductView    ProductView[]

  // Audit fields //
  isActive       Boolean         @default(true)
  createdAt      DateTime        @default(now())
  createdBy      String?
}

model ProductRating {
  id        Int      @id @default(autoincrement())
  rating    Int
  productId Int
  product   Product? @relation(fields: [productId], references: [id])
  // Audit fields //
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy String?
}

model ProductPrice {
  id        Int      @id @default(autoincrement())
  price     Decimal
  productId Int
  product   Product? @relation(fields: [productId], references: [id])
  // Audit fields //
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy String?
}

model ProductView {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product? @relation(fields: [productId], references: [id])
  // Audit fields //
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy String?
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  review    String
  productId Int
  product   Product? @relation(fields: [productId], references: [id])
  // Audit fields //
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  categoryId  Int?
  
  Product     Product[]
  // Audit fields //
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  createdBy   String?
  updatedAt   DateTime  @updatedAt
  updatedBy   String?
  isDeleted   Boolean   @default(false)
}

model Component {
  id                     Int                      @id @default(autoincrement())
  description            String
  lenght                 Float?
  width                  Float?
  productPriceId         String?
  ComponentsBySolarPanel ComponentsBySolarPanel[]
  componentTypeId        String?                  @unique
  // Audit fields //
  isActive               Boolean                  @default(true)
  createdAt              DateTime                 @default(now())
  createdBy              String?
  updatedAt              DateTime                 @updatedAt
  updatedBy              String?
  isDeleted              Boolean                  @default(false)
}

model Inventory {
  id              String   @id @default(uuid())
  productId       Int
  SKU             String   @unique
  productName     String   @unique
  description     String?  @db.Text
  quantityInStock Int
  unitPrice       Decimal  @db.Decimal(10, 2)
  discount        Decimal? @db.Decimal(5, 2)
  categoryId      Int
  supplierId      Int
}

model ComponentsBySolarPanel {
  id           Int         @id @default(autoincrement())
  solarPanelId Int?
  componentId  Int?
  quantity     Decimal
  solarPanel   SolarPanel? @relation(fields: [solarPanelId], references: [id])
  component    Component?  @relation(fields: [componentId], references: [id])
  // Audit fields //
  isActive     Boolean     @default(true)
  createdAt    DateTime    @default(now())
  createdBy    String?
  updatedAt    DateTime    @default(now()) @updatedAt
  updatedBy    String?
  isDeleted    Boolean     @default(false)

  @@unique([id, componentId, solarPanelId])
}

model ComponentType {
  id              String   @id @default(uuid())
  description     String
  packagingTypeId Int
  // Audit fields //
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  createdBy       String?
  updatedAt       DateTime @default(now()) @updatedAt
  updatedBy       String?
  isDeleted       Boolean  @default(false)
}



model SolarPanelView {
  id           Int        @id @default(autoincrement())
  userId       String
  solarPanelId Int
  user         User       @relation(fields: [userId], references: [id])
  solarPanel   SolarPanel @relation(fields: [solarPanelId], references: [id])
  viewedAt     DateTime   @default(now())
}

model SolarPanelReviews {
  id           Int        @id @default(autoincrement())
  userId       String
  solarPanelId Int
  user         User       @relation(fields: [userId], references: [id])
  solarPanel   SolarPanel @relation(fields: [solarPanelId], references: [id])
  reviewDate   DateTime   @default(now())
  reviewText   String
}

model SolarPanelRatings {
  id           Int        @unique @default(autoincrement())
  userId       String
  solarPanelId Int
  user         User       @relation(fields: [userId], references: [id])
  solarPanel   SolarPanel @relation(fields: [solarPanelId], references: [id])
  retingDate   DateTime   @default(now())
}

model Contact {
  id             Int       @id @default(autoincrement())
  firstname      String
  middlename     String?
  lastname       String
  dob            DateTime?
  stateId        String?
  accountTypeId  Int       @default(200)
  positionTypeId Int?      @default(100)
  Phone          Phone[]
  Address        Address[]
  email          Email[]
  cards          Card[]
  Cart           Cart[]
  Company        Company[]
  User           User?
  //Audit field//
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  createdBy      String?
  updatedAt      DateTime? @default(now()) @updatedAt
  updatedBy      String?
  isDeleted      Boolean?  @default(false)
}

model Sales {
  id           String     @id @default(uuid())
  orderId      Int
  order        Order      @relation(fields: [orderId], references: [id])
  solarPanelId Int
  solarPanel   SolarPanel @relation(fields: [solarPanelId], references: [id])
  quantitySold Int        @default(0)
  unitPrice    Decimal    @default(0.00)
  discount     Decimal    @default(0.00)
  totalAmount  Decimal    @default(0.00)
  //Audit field//
  createdAt    DateTime   @default(now())
  createdBy    String?
  updatedAt    DateTime?  @default(now()) @updatedAt
  updatedBy    String?
  isDeleted    Boolean?   @default(false)
}

model Company {
  id          Int      @id @default(autoincrement())
  companyName String
  contact     Contact? @relation(fields: [contactId], references: [id])
  contactId   Int      @unique
  website     String?

  //Audit field//
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  createdBy String?
  updatedAt DateTime? @default(now()) @updatedAt
  updatedBy String?
  isDeleted Boolean?  @default(false)
}

model Email {
  id          Int       @id @default(autoincrement())
  contact     Contact   @relation(fields: [contactId], references: [id])
  contactId   Int       @unique
  email       String
  emailTypeId Int
  isPrimary   Boolean   @default(false)
  //Audit field//
  createdAt   DateTime  @default(now())
  createdBy   String?
  updatedAt   DateTime? @default(now()) @updatedAt
  updatedBy   String?
  isDeleted   Boolean?  @default(false)
}

model Role {
  id          Int          @id @default(autoincrement())
  description String
  roleByUser  RoleByUser[]
  //Audit field//
  isActive    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  createdBy   String?
  updatedAt   DateTime?    @default(now()) @updatedAt
  updatedBy   String?
  isDeleted   Boolean?     @default(false)
}

model RoleByUser {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])
  userId    String
  roleId    Int
  //Audit field//
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @default(now()) @updatedAt
  updatedBy String?
  isDeleted Boolean  @default(false)

  @@unique([userId, roleId])
}

model Address {
  id            Int       @id @default(autoincrement())
  street        String?
  city          String?
  state         String?
  zipcode       String?
  country       String?
  contact       Contact   @relation(fields: [contactId], references: [id])
  contactId     Int
  addressTypeId Int       @default(100)
  isPrivate     Boolean   @default(false)
  // Audit fields //
  createdAt     DateTime  @default(now())
  createdBy     String?
  updatedAt     DateTime?
  isActive      Boolean?  @default(true)
  updatedBy     String?
  isDeleted     Boolean?  @default(false)
  //AddresType    AddresType @relation(fields: [addressTypeId], references: [id])
}

model Phone {
  id          Int      @id @default(autoincrement())
  contact     Contact  @relation(fields: [contactId], references: [id])
  contactId   Int
  phoneTypeId Int      @default(100)
  phone       String
  isPrimary   Boolean  @default(false)
  // Audit fields //
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @default(now()) @updatedAt
  updatedBy   String?
  isDeleted   Boolean  @default(false)
}

model User {
  id         String       @id @default(uuid())
  contact    Contact      @relation(fields: [contactId], references: [id])
  contactId  Int          @unique
  username   String       @unique
  email      String       @unique
  password   String?
  orders     Order[]
  roleByUser RoleByUser[]

  // Audit fields //
  isActive          Boolean             @default(true)
  createdAt         DateTime            @default(now())
  createdBy         String?
  updatedAt         DateTime            @default(now()) @updatedAt
  updatedBy         String?
  isDeleted         Boolean             @default(false)
  SolarPanelView    SolarPanelView[]
  SolarPanelReview  SolarPanelReviews[]
  SolarPanelRatings SolarPanelRatings[]
}

model Order {
  id            Int            @id @default(autoincrement())
  title         String
  status        OrderStatus    @relation(fields: [orderStatusId], references: [id])
  orderStatusId Int            @unique
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  toTalPrice    Decimal
  orderDate     DateTime
  SolarPanel    SolarPanel[]
  Payment       Payment?
  ShippingInfo  ShippingInfo[]
  OrderDetails  OrderDetails[]
  // Audit fields //
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  createdBy     String?
  updatedAt     DateTime       @default(now()) @updatedAt
  updatedBy     String?
  isDeleted     Boolean        @default(false)
  Sales         Sales[]

  @@index([userId])
}

model OrderDetails {
  id           Int         @id @unique @default(autoincrement())
  amountUnits  Int
  order        Order?      @relation(fields: [orderId], references: [id])
  orderId      Int
  solarPanel   SolarPanel? @relation(fields: [solarPanelId], references: [id])
  solarPanelId Int
  // Audit fields //
  isActive     Boolean     @default(true)
  createdAt    DateTime    @default(now())
  createdBy    String?
  updatedAt    DateTime    @default(now()) @updatedAt
  updatedBy    String?
  isDeleted    Boolean     @default(false)
}

model OrderStatus {
  id          Int      @id @default(autoincrement())
  Description String
  Order       Order?
  // Audit fields //
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @default(now()) @updatedAt
  updatedBy   String?
  isDeleted   Boolean  @default(false)
}

model Measurement {
  id        Int      @id @default(autoincrement())
  length    Float
  width     Float
  orderId   Int
  // Audit fields //
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @default(now()) @updatedAt
  updatedBy String?
  isDeleted Boolean  @default(false)

  @@index([orderId])
}

model Payment {
  id              Int             @id @default(autoincrement())
  paymentMethodId Int
  amount          Float
  orderId         Int             @unique
  order           Order           @relation(fields: [orderId], references: [id])
  PaymentDetail   PaymentDetail[]
  paymentStatus   PaymentStatus?  @relation(fields: [paymentStatusId], references: [id])
  paymentStatusId Int?
  // Audit fields //
  isActive        Boolean         @default(true)
  createdAt       DateTime        @default(now())
  createdBy       String?
  updatedAt       DateTime        @default(now()) @updatedAt
  updatedBy       String?
  isDeleted       Boolean         @default(false)
}

model PaymentDetail {
  id        Int      @id @default(autoincrement())
  payment   Payment  @relation(fields: [paymentId], references: [id])
  paymentId Int
  orderId   Int
  // Audit fields //
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @default(now()) @updatedAt
  updatedBy String?  @default(uuid())
  isDeleted Boolean  @default(false)
}

model Cart {
  id           Int         @id @default(autoincrement())
  userId       String
  solarPanelId Int
  solarPanel   SolarPanel? @relation(fields: [solarPanelId], references: [id])
  quantity     Int
  Contact      Contact?    @relation(fields: [contactId], references: [id])
  contactId    Int?
}

model ShippingInfo {
  id                   Int    @id @default(autoincrement())
  orderId              Int
  order                Order  @relation(fields: [orderId], references: [id])
  recipientName        String
  address              String
  city                 String
  state                String
  postalCode           String
  shippingCarrrierName String
  reviewId             Int
  rating               Float
}

model Card {
  id             Int      @id @default(autoincrement())
  cardTypeId     Int
  userId         Int      @unique
  cardNumber     String
  expirationDate DateTime
  CVV            String
  Contact        Contact? @relation(fields: [contactId], references: [id])
  contactId      Int?
  isDefault      Boolean  @default(false)
  // Audit fields //
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  createdBy      String
  updatedAt      DateTime @default(now()) @updatedAt
  updatedBy      String?
  isDeleted      Boolean  @default(false)
}

model PaymentStatus {
  id          Int       @id @default(autoincrement())
  description String
  Payment     Payment[]
  // Audit fields //
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  createdBy   String?
  updatedAt   DateTime  @default(now()) @updatedAt
  updatedBy   String?
  isDeleted   Boolean   @default(false)
}
